@using WebApplication3.Models;

@{
    ViewBag.Title = "Prediction";
}

<div style="margin-top: 20px;">
    <div style="display: flex; flex-direction: row; align-items: flex-start; flex-wrap: wrap; justify-content: center;">
        <div style="background-color: #B8B8B8; flex-basis: 350px; height:auto; text-align: center;">
            @if (ViewData["ImageBase64String"] != null && ViewData["ImageBase64String"].ToString().Trim().Length > 0)
            {
                <div class="image-cropper" style="position: relative;">
                    <img class="image" name="ImageDisplay" id="ImageDisplay" src="data:@ViewData["ImageContentType"];base64,@ViewData["ImageBase64String"]">
                    <div style="position: absolute; color: white; font-size: large; top: 8px; left: 100px;">Select area for prediction</div>
                </div>
            }
            else
            {
                <div>
                    <img src="~/Images/demo_pic.png" height="400" /><br />
                </div>
            }

            @using (Html.BeginForm("Index", "Predict", FormMethod.Post, new { @id = "frmPredict", @enctype = "multipart/form-data" }))
            {

                <a href="javascript:$('#ImageFile').trigger('click');" style="display: block; text-decoration: none; background-color: #C9C9C9; color: white; height: 50px; line-height:50px; font-size: x-large;">Upload Image</a>
                <table border="0" cellpadding="0" cellspacing="0">
                    <tr valign="top">
                        <td>
                            <input type="file" style="display:none;" id="ImageFile" name="ImageFile" onchange='document.getElementById("frmPredict").submit();' />
                        </td>
                    </tr>
                </table>
            }
        </div>
        <div style="flex-basis: 50px">
            &nbsp;
        </div>
        <div style="align-self: stretch; flex-grow: 1; display:flex; flex-direction: column; min-height: 230px;">
            <div style="display:flex; flex-direction: column; flex-grow: 1">
                @foreach (Tag tagCategory in Tag.GetTagsFromDB().GroupBy(tag => tag.Category).Select(group => group.First()))
                {
                    <div>
                        <div style="flex-grow: 1; display: flex; flex-direction: row; flex-wrap: wrap; align-items: flex-start; align-content: flex-start;">
                            @foreach (Tag tag in Tag.GetTagsFromDB().Where(tag => tag.Category.Equals(tagCategory.Category)))
                            {
                                <div style="padding-top: 10px; padding-bottom: 10px; display: flex; flex-direction: row; flex-wrap: nowrap; align-items: center;">
                                    <div>
                                        <img class="chk-tag" id="chk-tag-@(tag.Name.Trim().ToLower().Replace(" ", ""))" src="~/Images/cbu.png" />
                                    </div>
                                    <div style="margin-left: 5px; min-width: 60px">
                                        <div class="text-muted chk-tag-text" id="chk-tag-text-@(tag.Name.Trim().ToLower().Replace(" ", ""))" style="font-size: large;">@tag.Name</div>
                                    </div>
                                </div>
                                <div style="flex-basis: 50px">&nbsp;</div>
                            }
                        </div>

                    </div>
                }
            </div>
            <div style="padding-bottom: 50px; padding-top: 50px; display: flex; flex-direction: row;">
                <div id="slider" style="flex-basis: 250px;">
                    <div id="custom-handle" class="ui-slider-handle"></div>
                </div>
            </div>
            <div style="display:flex; flex-direction: row; justify-content: flex-start; align-items: center;">
                <div>
                    @using (Ajax.BeginForm("Predict", "Predict", new AjaxOptions { HttpMethod = "POST", OnBegin = "frmPredict_Begin", OnSuccess = "frmPredict_Success", OnFailure = "frmPredict_Failure" }, new { @id = "frmPredict" }))
                    {
                        <input type="hidden" name="ImageBase64String" id="ImageBase64String" value="@ViewData["ImageBase64String"]" />
                        <input type="hidden" name="ImageContentType" id="ImageContentType" value="@ViewData["ImageContentType"]" />
                        <input type="hidden" name="ImageContentLength" id="ImageContentLength" value="@ViewData["ImageContentLength"]" />
                        <input type="hidden" name="ImageExtension" id="ImageExtension" value="@ViewData["ImageExtension"]" />
                        <input type="hidden" name="ImageCoordsX" id="ImageCoordsX" value="" />
                        <input type="hidden" name="ImageCoordsY" id="ImageCoordsY" value="" />
                        <input type="hidden" name="ImageCoordsX2" id="ImageCoordsX2" value="" />
                        <input type="hidden" name="ImageCoordsY2" id="ImageCoordsY2" value="" />
                        <input type='hidden' name='strongTagStrings' id='strongTagStrings' />
                        <input type='hidden' name='voice' id='voice' />
                        <input type="submit" id="Predict" name="Predict" value="Prediction" disabled style="border: none; outline: none; background-color: #c9c9c9; color: #e2e2e2; max-width: none; width: 200px; height:50px; font-size: x-large;" />
                    }
                </div>
                <div style="flex-basis: 50px;">
                    &nbsp;
                </div>
                <div>
                    <div style="display:flex; flex-direction: row; flex-wrap: nowrap; align-items: center; justify-content: space-between;">
                        <div>
                            <a href="javascript:voiceSearchClicked()" id="voiceSearchMic" class="voice-search-disabled"><img src="~/Images/icon_mick.png" style="border: none;" /><br /></a>
                        </div>
                        <div style="min-width: 100px">
                            &nbsp;&nbsp;&nbsp;<a href="javascript:voiceSearchClicked()" id="voiceSearchLink" class="voice-search-disabled text-muted" style="text-decoration: none;">Voice Search</a>
                        </div>
                    </div>
                </div>
                <div id="DummyVoiceDiv" style="display: flex; flex-direction: row; align-items: center;"></div>
            </div>
        </div>
    </div>
</div>
<div style="margin-top: 20px" id="PredictionResultDiv" class="hidden">
    <div style="display:flex; flex-direction: row; align-items: flex-start; justify-content: center;">
        <div style="flex-grow: 1; background-color:#f3f3f3; display:flex; flex-direction: column">
            <div style="color: #4eaaff; font-size: large; padding: 10px;">Prediction percentage results</div>
            <div>
                <hr style="padding: 0px; margin:0px; border-color: #c9c9c9" />
            </div>
            <div style="display: flex; flex-direction: row; flex-wrap: wrap; justify-content: flex-start; align-content: center; ">
                <div style="flex-basis: 380px; display:flex; flex-direction: row; justify-content:center; padding-top: 20px; padding-bottom: 20px;">
                    <div style="display:flex; flex-direction: column;">
                        <div style="background-color: #76baf9; height: 40px; line-height: 40px; text-align: center;">
                            <span style="font-size: large; color: #fff; padding: 20px;">Selected area</span>
                        </div>
                        <div style="text-align: center;">
                            <div id="PredictImageDisplay" style="border: 1px solid #c8c8c8; border-top: none;"></div>
                        </div>
                    </div>
                </div>
                <div style="flex-grow: 1; padding: 20px;">
                    <table id="tblPredictionResult"></table>
                </div>
            </div>
        </div>
    </div>
</div>

<div id='VoiceRecognitionDiv' class="hidden" style="background-color: #f3f3f3; margin-top: 20px; padding: 10px; font-size: large; color: #4eaaff"></div>

<div style="margin-top: 20px" id="InventoryDiv" class="hidden">
    <div style="display:flex; flex-direction: row; align-items: flex-start; justify-content: center;">
        <div id="InventoryContentDiv" style="flex-grow: 1; background-color:#f3f3f3; display:flex; flex-direction: column">
        </div>
    </div>
</div>

<br />
@if (ViewData["ImageBase64String"] != null && ViewData["ImageBase64String"].ToString().Trim().Length > 0)
{

    <script type="text/javascript">
        SetImageCropper($("#ImageDisplay"))
        //$("#Predict").prop("disabled", true);
        setPredictionButtonDisabled(true);
    </script>
}

@section OptionalScript
{
    <link rel="stylesheet" href="//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
    <style>
        table#tblPredictionResult {
            border-collapse: unset !important;
            width: 100%;
            border: none;
        }

            table#tblPredictionResult th, table#tblPredictionResult td {
                text-align: left;
                padding: 0px;
                padding-left: 20px;
                font-weight: normal;
                font-size: large;
            }

            table#tblPredictionResult td {
                background-color: #f3f3f3;
                height: 40px;
                line-height: 40px;
            }

                table#tblPredictionResult td.tagname {
                    color: #787878;
                    border: none;
                    border-left: 1px solid #c8c8c8;
                    max-width: 100px;
                }

                table#tblPredictionResult td.tagper {
                    color: black;
                    border: none;
                    border-right: 1px solid #c8c8c8;
                }

            table#tblPredictionResult th {
                background-color: #76baf9;
                color: white;
                height: 40px;
                line-height: 40px;
            }

        .text-primary {
            color: #4eaaff !important;
        }

        .text-muted {
            color: #818a91 !important;
        }

        .voice-search-disabled {
            cursor: default;
            opacity: 0.3;
        }

        .ui-widget-header {
            background: #4eaaff !important;
            cursor: pointer !important;
        }

        .ui-widget-content {
            background: #c8c8c8 !important;
            cursor: pointer !important;
        }

        #custom-handle {
            width: 2em;
            height: 1.6em;
            top: 50%;
            margin-top: -.8em;
            text-align: center;
            line-height: 1.6em;
            background: #e1e1e1 !important;
            color: #454545 !important;
            outline: none !important;
            border: 1px solid #c5c5c5 !important;
            cursor: pointer !important;
        }

        .inventory-container:after {
            content: "";
            flex: auto;
        }


    </style>
    <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
    <script type="text/javascript">
        $(function () {
            var handle = $("#custom-handle");
            var percentageStart = 0;
            $("#slider").slider({
                disabled: true,
                min: 1,
                max: 100,
                orientation: "horizontal",
                range: "min",
                animate: true,
                create: function () {
                    handle.text($(this).slider("value"));
                },
                slide: function (event, ui) {
                    handle.text(ui.value);
                },
                start: function (event, ui) {
                    percentageStart = ui.value;
                },
                stop: function (event, ui) {
                    if (percentageStart !== ui.value) {
                        handleTextChange();
                    }
                }
            });
        });
    </script>

    <script type="text/javascript">
        jQuery.browser = {};
        (function () {
            jQuery.browser.msie = false;
            jQuery.browser.version = 0;
            if (navigator.userAgent.match(/MSIE ([0-9]+)\./)) {
                jQuery.browser.msie = true;
                jQuery.browser.version = RegExp.$1;
            }
        })();
    </script>
    <script src="~/Scripts/jquery.Jcrop.js" type="text/javascript"></script>
    <link href="~/Content/jquery.Jcrop.css" type="text/css" rel="stylesheet" />
    <script type="text/javascript">
    var recognition = new webkitSpeechRecognition();
    var recognizing = false;
    var manualVoiceStart = false;

    recognition.continuous = false;
    recognition.interimResults = false;
    recognition.onresult = Recognition_Result;
    recognition.onstart = Recognition_Start;
    recognition.onend = Recognition_End;
    recognition.onerror = Recognition_Error;


    function Recognition_Result(e) {
        if (e.results.length > 0) {
            var bin = e.results[e.results.length - 1];

            if (bin.isFinal && $("#VoiceRecognitionDiv").length) {
                CallVoiceAsync(bin[0].transcript);
            }
        }
    }

    function CallVoiceAsync(voice) {
        stopVoiceRecognition();
        $("#voice").val(voice);

        setVoiceRecognitionDivHtml("<b>You:</b>&nbsp;" + voice);

        displaySingleLineMessageInInventory("Fetching predicted results...");

        $('html, body').animate({ scrollTop: $('#VoiceRecognitionDiv').offset().top - 200 }, 'slow');

        $.ajax({
            url: 'Predict/HandleVoice',
            type: 'POST',
            contentType: 'application/x-www-form-urlencoded; charset=UTF-8',
            success: HandleVoice_Success,
            error: HandleVoice_Failure,
            data: $("#strongTagStrings, #voice").serialize(),
            dataType: 'json'
        });
    }

    function Recognition_Start() {
        recognizing = true;
    }

    function Recognition_End() {
        recognizing = false;
        if (manualVoiceStart) {
            //setTimeout(function () { startVoiceRecognition(); }, 2000);
            startVoiceRecognition();
        }
    }

    function Recognition_Error(event) {
        recognizing = false;
    }


    function startVoiceRecognition() {
        manualVoiceStart = true;
        if (!recognizing) {
            recognition.start();
        }
    }

    function stopVoiceRecognition() {
        manualVoiceStart = false;
        if (recognizing) {
            recognition.abort();
        }
    }

        function voiceSearchClicked() {
            if ($("#voiceSearchMic").hasClass("voice-search-disabled")) {
                return;
            }

            startVoiceRecognition();
        }

    function HandleVoice_Success(data, status, xhr) {
        //$("#Predict").prop("disabled", false);
        setPredictionButtonDisabled(false);
        $("#minimumPredictionPercentage").prop("disabled", false);
        $("#slider").slider("enable");
        //startVoiceRecognition(); change 20171012

        if (data.ChangeInventory) {
            if (status == "success" && xhr.status == 200) {
                displayInventory(data);

                setVoiceRecognitionDivHtml("<b>You:</b>&nbsp;" + data.Voice + "&nbsp; <b>Intent:</b>&nbsp;" + data.Intent + "&nbsp; <b>Entities:</b>&nbsp;" + data.Entities);
            }
            else {
                displaySingleLineMessageInInventory("Error occurred.");
            }
        }
    }

    function HandleVoice_Failure(xhr, status, error) {
        //$("#Predict").prop("disabled", false);
        setPredictionButtonDisabled(false);
        $("#minimumPredictionPercentage").prop("disabled", false);
        $("#slider").slider("enable");
        //startVoiceRecognition(); change 20171012

        displaySingleLineMessageInInventory(error);
    }


    function frmPredict_Success(data, status, xhr) {
        //$("#Predict").prop("disabled", false);
        setPredictionButtonDisabled(false);

        $("#PredictionResultDiv").removeClass("hidden");

        if (status == "success" && xhr.status == 200) {
            $("#PredictImageDisplay").html("<img src='data:" + data.PredictionImageContentType + ";base64," + data.PredictionImageBase64String + "' />");

            $("#slider").slider("option", "value", data.MinimumPredictionPercentage);
            $("#custom-handle").text(data.MinimumPredictionPercentage);
            $("#slider").slider("enable");

            displayPredictionResult(data);

            displayInventory(data);

            //startVoiceRecognition(); change 20171012
        }
        else {
            displayError("Error occurred.");
        }
    }

    function frmPredict_Failure(xhr, status, error) {
        //$("#Predict").prop("disabled", false);
        setPredictionButtonDisabled(false);

        $("#PredictionResultDiv").removeClass("hidden");

        displayError(error);
    }

    function frmPredict_Begin(xhr) {
        //$("#Predict").prop("disabled", true);
        setPredictionButtonDisabled(true);
        setVoiceRecognitionDivHtml("");
        stopVoiceRecognition();
        $("#PredictionResultDiv").addClass("hidden");
        displaySingleLineMessageInInventory("Fetching predicted results...");
    }

    function displayPredictionResult(data) {
        var content = "<tr valign='top'><th>Tag</th><th>Percentage %</th></tr>";

        for (var i = 0; i < data.Predictions.length; i++) {
            content += "<tr valign='top'><td class='tagname'>";
            content += "<input type='hidden' id='predictions[" + i + "].Tag' name='predictions[" + i + "].Tag' value='" + data.Predictions[i].Tag + "' />";
            content += "<input type='hidden' id='predictions[" + i + "].Probability' name='predictions[" + i + "].Probability' value='" + data.Predictions[i].Probability + "' />";
            content += "<input type='hidden' id='predictions[" + i + "].MappingTagID' name='predictions[" + i + "].MappingTagID' value='" + data.Predictions[i].MappingTagID + "' />";
            content += "<input type='hidden' id='predictions[" + i + "].MappingTagString' name='predictions[" + i + "].MappingTagString' value='" + data.Predictions[i].MappingTagString + "' />";
            content += data.Predictions[i].MappingTagString + "</td><td class='tagper'>" + (Math.round(data.Predictions[i].Probability * 10000) / 100).toString() + " %";
            content += "</td></tr>";
        }

        $("#tblPredictionResult").html(content);
        $("#tblPredictionResult").css('border-bottom', '1px solid #c8c8c8');
    }

    function displayInventory(data) {
        $("#strongTagStrings").val("");

        $(".chk-tag-text").removeClass("text-primary");
        $(".chk-tag-text").addClass("text-muted");
        $(".chk-tag").attr("src", "Images/cbu.png");

        $("#voiceSearchMic").removeClass("voice-search-disabled");
        $("#voiceSearchLink").removeClass("voice-search-disabled");
        $("#voiceSearchLink").removeClass("text-muted");
        $("#voiceSearchLink").addClass("text-primary");

        if (data.StrongTagStrings.length > 0) {
            $("#strongTagStrings").val(data.StrongTagStrings);

            var stronTagsArray = data.StrongTagStrings.split(',');
            for (var i = 0; i < stronTagsArray.length; i++) {
                if (stronTagsArray[i].trim().length > 0) {
                    var t = stronTagsArray[i].trim().toLowerCase().replace(/ /g, '');
                    $("#chk-tag-text-" + t).removeClass("text-muted");
                    $("#chk-tag-text-" + t).addClass("text-primary");
                    $("#chk-tag-" + t).attr("src", "Images/cbc.png");
                }
            }
        }

        @if (Settings.ApplyDummyVoice)
        {
            @:$("#DummyVoiceDiv").html("<input type='button' class='btn' style='border-radius: 0px; background-color: #ca3c35 !important; color: #fff !important;' value='Say: @Settings.DummyVoice' onclick='CallVoiceAsync(\"@Settings.DummyVoice\")' /><br /><br />");
        }


        var content = "";

        //content += "<tr valign='middle'>";

        //for (var i = 0; i < data.Images.length; i++) {
        //    content += "<td><img src='ImageFiles/" + data.Images[i].Filename + "' width='350' /><br /></td>";
        //    if (((i + 1) % 3) == 0) {
        //        content += "</tr><tr valign='middle'>";
        //    }
        //}

        //if ((data.Images.length > 3) && ((i % 3) != 0)) {
        //    for (var r = 1; r <= (3 - (i % 3)); r++) {
        //        content += "<td>&nbsp;</td>";
        //    }
        //}

        //content += "</tr>";

        //$("#tblInventory").prop("border", "2");
        //$("#tblInventory").prop("style", "border: 1px solid #d0d0d0;");
        //$("#tblInventory").prop("cellpadding", "5");
        //$("#tblInventory").prop("cellspacing", "5");
        //$("#tblInventory").html(content);

        $("#InventoryDiv").removeClass("hidden");

        content = "<div style='color: #4eaaff; font-size: large; padding: 10px;'>Predicted results matching tags with relevant material</div>";

        content += "<div style='background-color: #fff; padding-top: 10px; display: flex; flex-direction: row; flex-wrap: wrap; justify-content: flex-start; align-content: flex-start;'>";
        //content += "<div style='flex: 1; background-color: yellow;'>&nbsp;</div>";
        //content += "<div style='background-color: green; display: flex; flex-direction: row; flex-wrap: wrap; justify-content: space-between; align-content: flex-start;'>";
        for (var i = 0; i < data.Images.length; i++) {
            content += "<div style='padding: 5px;'><img src='ImageFiles/" + data.Images[i].Filename + "' width='250' /></div>";
        }
        //content += "</div>";
        //content += "<div style='flex: 1; background-color: yellow;'>&nbsp;</div>";
        content += "</div>";

        $("#InventoryContentDiv").html(content);
    }

    function displayError(error) {
        $("#PredictImageDisplay").text(error);

        $("#slider").slider("disable");

        $("#tblPredictionResult").html("");

        displaySingleLineMessageInInventory("");
    }

    function displaySingleLineMessageInInventory(message) {
        $("#InventoryDiv").removeClass("hidden");
        $("#InventoryContentDiv").html("<div style='color: #4eaaff; font-size: large; padding: 10px;'>" + message + "</div>");

        //$("#tblInventory").html("<tr valign='top'><td>" + message + "</td></tr>");
        //$("#tblInventory").prop("border", "0");
        //$("#tblInventory").prop("style", "");
        //$("#tblInventory").prop("cellpadding", "0");
        //$("#tblInventory").prop("cellspacing", "0");
    }

    function handleTextChange() {
        setVoiceRecognitionDivHtml("");
        $.ajax({
            url: 'Predict/MinimumPredictionPercentage',
            type: 'POST',
            contentType: 'application/x-www-form-urlencoded; charset=UTF-8',
            success: MinimumPredictionPercentage_Success,
            error: MinimumPredictionPercentage_Failure,
            data: "minimumPredictionPercentage=" + $("#slider").slider("value") + "&" + $("[id^=predictions\\[]").serialize(),
            dataType: 'json'
        });
        //$("#Predict").prop("disabled", true);
        setPredictionButtonDisabled(true);
        $("#minimumPredictionPercentage").prop("disabled", true);
        $("#slider").slider("disable");

        displaySingleLineMessageInInventory("Fetching predicted results...");
        }

        function setVoiceRecognitionDivHtml(content) {
            $("#VoiceRecognitionDiv").html("<table border='0' cellspacing='0' cellpadding='0'><tr valign='middle'><td><img src='Images/icon_mick.png' border='0'><br /></td><td style='padding-left: 10px;'>" + content + "</td></tr></table>");
            if (content.trim().length === 0) {
                $("#VoiceRecognitionDiv").addClass("hidden");
            }
            else {
                $("#VoiceRecognitionDiv").removeClass("hidden");
            }
        }

    function MinimumPredictionPercentage_Success(data, status, xhr) {
        //$("#Predict").prop("disabled", false);
        setPredictionButtonDisabled(false);
        $("#minimumPredictionPercentage").prop("disabled", false);
        $("#slider").slider("enable");

        if (status == "success" && xhr.status == 200) {
            displayInventory(data);
        }
        else {
            displaySingleLineMessageInInventory("Error occurred.");
        }
    }

    function MinimumPredictionPercentage_Failure(xhr, status, error) {
        //$("#Predict").prop("disabled", false);
        setPredictionButtonDisabled(false);
        $("#minimumPredictionPercentage").prop("disabled", false);
        $("#slider").slider("enable");

        displaySingleLineMessageInInventory(error);
    }

    function ajaxindicatorstart(text) {
        if (jQuery('body').find('#resultLoading').attr('id') != 'resultLoading') {
            jQuery('body').append('<div id="resultLoading" style="display:none"><div><img src="Images/ajax-loader.gif"><div>' + text + '</div></div><div class="bg"></div></div>');
        }

        jQuery('#resultLoading').css({
            'width': '100%',
            'height': '100%',
            'position': 'fixed',
            'z-index': '10000000',
            'top': '0',
            'left': '0',
            'right': '0',
            'bottom': '0',
            'margin': 'auto'
        });

        jQuery('#resultLoading .bg').css({
            'background': '#000000',
            'opacity': '0.7',
            'width': '100%',
            'height': '100%',
            'position': 'absolute',
            'top': '0'
        });

        jQuery('#resultLoading>div:first').css({
            'width': '250px',
            'height': '75px',
            'text-align': 'center',
            'position': 'fixed',
            'top': '0',
            'left': '0',
            'right': '0',
            'bottom': '0',
            'margin': 'auto',
            'font-size': '16px',
            'z-index': '10',
            'color': '#ffffff'

        });

        jQuery('#resultLoading .bg').height('100%');
        jQuery('#resultLoading').fadeIn(300);
        jQuery('body').css('cursor', 'wait');
    }

    function ajaxindicatorstop() {
        jQuery('#resultLoading .bg').height('100%');
        jQuery('#resultLoading').fadeOut(300);
        jQuery('body').css('cursor', 'default');
    }

    jQuery(document).ajaxStart(function () {
        //show ajax indicator
        ajaxindicatorstart('processing.. please wait..');
    }).ajaxStop(function () {
        //hide ajax indicator
        ajaxindicatorstop();
    });

    function SetImageCropper(image) {
        //Define a function to execute when the cropping rectangle changes.
        var update = function (coords) {
            if (parseInt(coords.w) <= 0 || parseInt(coords.h) <= 0) {
                //$("#Predict").prop("disabled", true);
                setPredictionButtonDisabled(true);
                return; //Require valid width and height
            }
            else {
                //$("#Predict").prop("disabled", false);
                setPredictionButtonDisabled(false);
                $("#ImageCoordsX").val(coords.x);
                $("#ImageCoordsY").val(coords.y);
                $("#ImageCoordsX2").val(coords.x2);
                $("#ImageCoordsY2").val(coords.y2);

                //Build the URL based on the coordiantes. The resizing module will handle everything else.
                //var url = path + '?crop=(' + coords.x + ',' + coords.y + ',' + coords.x2 + ',' + coords.y2 +
                //   ')&cropxunits=' + image.width() + '&cropyunits=' + image.height()
            }
        }

        //Start up jCrop on the image, specifying our function be called when the selection rectangle changes,
        // and that a 60% black shadow should cover the cropped regions.
        image.Jcrop({ onChange: update, onSelect: update, bgColor: 'black', bgOpacity: 0.6 });
        }


        function setPredictionButtonDisabled(value) {
            $("#Predict").prop("disabled", value);
            if (value === false) {
                $("#Predict").css("background-color", "#4eaaff");
                $("#Predict").css("color", "#fff");
            }
            else {
                $("#Predict").css("background-color", "#c9c9c9");
                $("#Predict").css("color", "#e2e2e2");
            }
        }

    </script>

}